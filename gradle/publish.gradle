apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'org.jetbrains.dokka'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives androidSourcesJar
    archives javadocJar
}

group = moduleGroupId // Maven Group ID for the artifact
version = moduleVersion

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId moduleGroupId
                artifactId moduleArtifactId
                version moduleVersion

                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }

                // to speed up local development build times, skip dokka
                if (!IS_DEVELOPMENT) {
                    artifact androidSourcesJar
                    artifact javadocJar
                }

                pom {
                    name = moduleArtifactId
                    description = moduleDescription
                    url = moduleSiteUrl
                    licenses moduleLicenses
                    developers moduleDevelopers
                    scm {
                        url = "https://$moduleGitHostname/$moduleGitPath"
                        connection = "scm:git@$moduleGitHostname:${moduleGitPath}.git"
                        developerConnection = "scm:git@$moduleGitHostname:${moduleGitPath}.git"
                    }
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
            System.getenv("GRADLE_SIGNING_KEY_ID"),
            System.getenv("GRADLE_SIGNING_KEY"),
            System.getenv("GRADLE_SIGNING_PASSWORD")
    )
    if (!IS_DEVELOPMENT) // skip signing for local installs during development
        sign publishing.publications
}